{
    "imports": [
        "github.com/project-flogo/flow",
		"github.com/TIBCOSoftware/labs-air-contrib/activity/error",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/mqtt",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/coerce",
        "github.com/project-flogo/contrib/function/array",
        "github.com/TIBCOSoftware/labs-air-contrib/activity/log",
        "github.com/TIBCOSoftware/labs-air-contrib/function/air"
    ],
    "resources": [
        {
            "id": "flow:Pipe",
            "data": {
                "name": "Pipe",
                "description": "",
                "links": [
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"${{ID}}$Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "Not set yet!"
                            }
                        }
                    },
                    {
						"activity": {
							"settings": {
							   "id":"${{ID}}$IoTMQTT",
                               "qos": "=$property[\"${{ID}}$MQTTPub.Qos\"]",
                               "keepAlive": "=$property[\"${{ID}}$MQTTPub.KeepAlive\"]",
                               "cleanSession": "=$property[\"${{ID}}$MQTTPub.CleanSession\"]",
                               "retain": "=$property[\"${{ID}}$MQTTPub.Retain\"]",
                               "broker": "=$property[\"Mqtt.${{ID}}$IoTMQTT.Broker_URL\"]",
                               "topic": "=$property[\"${{ID}}$MQTTPub.Topic\"]",
                               "username": "=$property[\"Mqtt.${{ID}}$IoTMQTT.Username\"]",
                               "password": "=$property[\"Mqtt.${{ID}}$IoTMQTT.Password\"]",
                               "sslConfig": "=air.json2object($property[\"Mqtt.${{ID}}$IoTMQTT.SSLConfig\"])"
							},
							"input" : {
                                "message": "=air.object2json(air.airdataselector($flow.gateway, $flow.reading, $flow.enriched, $property[\"${{ID}}$MQTTPub.Data\"]))"
							},
							"ref": "github.com/TIBCOSoftware/labs-air-contrib/activity/mqtt"
						},
                        "description": "An MQTT message publisher",
                        "id": "MQTTPub",
                        "name": "MQTTPub"
					},
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {},
				 "errorHandler": {}
            }
        }
    ],
    "properties": [
        {
            "name": "${{ID}}$Logging.LogLevel",
            "type": "string",
            "value": "INFO"
        },
        {
            "name": "${{ID}}$MQTTPub.Topic",
            "type": "string",
            "value": "AIRModelScoredData"
        },
        {
            "name": "${{ID}}$MQTTPub.Qos",
            "type": "float64",
            "value": 2
        },
        {
            "name": "${{ID}}$MQTTPub.KeepAlive",
            "type": "float64",
            "value": 120
        },
        {
            "name": "${{ID}}$MQTTPub.CleanSession",
            "type": "boolean",
            "value": false
        },
        {
            "name": "${{ID}}$MQTTPub.Retain",
            "type": "boolean",
            "value": false
        },
        {
            "name": "${{ID}}$MQTTPub.Store",
            "type": "string",
            "value": ""
        },
        {
            "name": "Mqtt.${{ID}}$IoTMQTT.Broker_URL",
            "type": "string",
            "value": "tcp://a0056dbbadb2f11e99e4c067e42b309c-335014729.us-west-2.elb.amazonaws.com:1883"
        },
        {
            "name": "Mqtt.${{ID}}$IoTMQTT.Username",
            "type": "string",
            "value": "mqtt_admin"
        },
        {
            "name": "Mqtt.${{ID}}$IoTMQTT.Password",
            "type": "string",
            "value": "SECRET:w73f6dRNWmzKm4xSRB0yRg=="
        },
        {
            "name": "Mqtt.${{ID}}$IoTMQTT.SSLConfig",
            "type": "string",
            "value": "{}"
        },
        {
            "name": "${{ID}}$MQTTPub.Data",
            "type": "string",
            "value": "{\"uuid\": \"@f1..id@\",\"created\": \"@f1..origin@\",\"gateway\": \"@f1..gateway@\",\"device\": \"@f1..deviceName@\",\"resource\": \"@f1..resourceName@\",\"value\": \"@f1..value@\",\"source\": \"@rule..source@\",\"description\": \"@rule..description@\",\"level\": \"@rule..level@\"}"
        }
    ],
    "connections": {},
    "contrib": []
}