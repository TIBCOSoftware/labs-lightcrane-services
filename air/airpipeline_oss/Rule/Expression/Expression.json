{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/contrib/function/string",
        "github.com/SteveNY-Tibco/labs-air-contrib/activity/log",
        "github.com/SteveNY-Tibco/labs-lightcrane-contrib/activity/tablemutate",
        "github.com/SteveNY-Tibco/labs-lightcrane-contrib/activity/mapping",
        "github.com/SteveNY-Tibco/labs-air-contrib/trigger/notificationlistener",
        "github.com/SteveNY-Tibco/labs-air-contrib/function/air"
    ],
    "name": "X_Rule_Expression",
    "description": "",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.9.0",
    "triggers": [],
    "resources": [
        {
            "id": "flow:Rule",
            "data": {
                "name": "Rule",
                "description": "3|5",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "TableMutate",
                        "type": "expression",
                        "label": "LogtoCopyOfReturn",
                        "value": "air.airfiltersimple($flow.reading, air.json2object($property[\"${{ID}}$Rule.Filter\"]))"
                    },
                    {
                        "id": 2,
                        "from": "TableMutate",
                        "to": "Matching",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Matching",
                        "to": "Next_Flow_3",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Next_Flow_3",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "Log",
                        "to": "Next_Flow_5",
                        "type": "exprOtherwise",
                        "label": "LogtoReturn2"
                    },
                    {
                        "id": 6,
                        "from": "Next_Flow_5",
                        "to": "Return2",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"${{ID}}$Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "=string.concat(\"########## Rule_0(Expression) ########## : gateway = \", $flow.gateway, \", reading = \", coerce.toString($flow.reading), \", enriched = \", coerce.toString($flow.enriched))"
                            }
                        }
                    },
                    {
                        "id": "TableMutate",
                        "name": "TableMutate",
                        "description": "A simple activity for upserting/deleting data to/from table",
                        "activity": {
                            "ref": "#tablemutate",
                            "settings": {
                                "Table": {
                                    "id": "051d4dc0-aad3-11eb-a3c6-f975007303e3",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "tibco-simple-table",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "Simple Table",
                                    "description": "This is URL file reader",
                                    "ref": "github.com/SteveNY-Tibco/labs-lightcrane-contrib/connector/simpletable",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Table Name",
                                                "description": "Name of the table instance"
                                            },
                                            "value": "IoTData"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "description": "A simple table for storing tuple"
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "schema",
                                            "type": "array",
                                            "required": true,
                                            "display": {
                                                "name": "Table Schema",
                                                "description": "Schema of the table",
                                                "type": "table",
                                                "schema": "{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"definitions\": {},\r\n    \"id\": \"http://example.com/example.json\",\r\n    \"items\": {\r\n        \"id\": \"/items\",\r\n        \"properties\": {\r\n            \"Name\": {\r\n                \"id\": \"/items/properties/Name\",\r\n                \"type\": \"string\"\r\n            },\r\n            \"Type\": {\r\n                \"id\": \"/items/properties/Type\",\r\n                \"type\": {\"enum\":[\"String\", \"Integer\", \"Long\", \"Double\", \"Boolean\", \"Date\", \"Object\"]}\r\n            },\r\n            \"IsKey\": {\r\n                \"id\": \"/items/properties/IsKey\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            },\r\n            \"Indexed\": {\r\n                \"id\": \"/items/properties/Indexed\",\r\n                \"type\": {\"enum\":[\"no\", \"yes\"]}\r\n            }\r\n        },\r\n        \"type\": \"object\"\r\n    },\r\n    \"type\": \"array\"\r\n}"
                                            },
                                            "value": "[{\"Name\":\"gateway\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"device\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"name\",\"Type\":\"String\",\"IsKey\":\"yes\",\"Indexed\":\"no\"},{\"Name\":\"reading\",\"Type\":\"Object\",\"IsKey\":\"no\",\"Indexed\":\"no\"}]"
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "flogo",
                                    "key": "flogo/GraphBuilder_Tools/connector/simpletable/connector.json",
                                    "display": {
                                        "description": "This is URL file reader",
                                        "category": "GraphBuilder_Tools",
                                        "visible": true,
                                        "smallIcon": "simpletable.png"
                                    },
                                    "actions": [
                                        {
                                            "name": "create",
                                            "display": {
                                                "name": "Create",
                                                "readonly": false,
                                                "valid": true,
                                                "visible": true
                                            }
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "schemaMap": {},
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1619919853518,
                                    "user": "flogo",
                                    "connectorName": "IoTData",
                                    "connectorDescription": " "
                                },
                                "Method": "upsert"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "gateway": "=$flow.gateway",
                                        "device": "=$flow.reading.device",
                                        "name": "=$flow.reading.name",
                                        "reading": "=$flow.reading"
                                    }
                                }
                            },
                            "output": {
                                "Exists": false
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"gateway\":\"2\",\"device\":\"2\",\"name\":\"2\",\"reading\":{}}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"New\":{\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{}}}},\"Old\":{\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{}}}}}}",
                                        "fe_metadata": "{\"New\":{\"gateway\":\"2\",\"device\":\"2\",\"name\":\"2\",\"reading\":{}},\"Old\":{\"gateway\":\"2\",\"device\":\"2\",\"name\":\"2\",\"reading\":{}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Matching",
                        "name": "Matching",
                        "description": "Mapping field from input to output",
                        "activity": {
                            "ref": "#mapping",
                            "settings": {
                                "IsArray": false,
                                "MappingFields": "[{\"Name\":\"Notification\",\"Type\":\"Object\"}]"
                            },
                            "input": {
                                "Mapping": {
                                    "mapping": {
                                        "Notification": "=air.notifyasy($activity[TableMutate].Data.New, $activity[TableMutate].Data.Old, $property[\"${{ID}}$Rule.Threshold\"], $property[\"${{ID}}$App.ComponentName\"])"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "Mapping": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Notification\":{\"type\":\"object\",\"properties\":{}},\"SkipCondition\":{\"type\":\"boolean\"}}}",
                                        "fe_metadata": "{\"Notification\":{},\"SkipCondition\":false}"
                                    }
                                },
                                "output": {
                                    "Data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"Notification\":{\"type\":\"object\",\"properties\":{}}}}",
                                        "fe_metadata": "{\"Notification\":{}}"
                                    }
                                },
                                "settings": {
                                    "MappingFields": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"Name\":{\"type\":\"string\"},\"Type\":{\"type\":\"string\"}}}}",
                                        "fe_metadata": "[{\"Name\":\"Notification\",\"Type\":\"Object\"}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "gateway",
                            "type": "string"
                        },
                        {
                            "name": "reading",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "enriched",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "${{ID}}$Logging.LogLevel",
            "type": "string",
            "value": "INFO"
        },
        {
            "name": "App.InstanceName",
            "type": "string",
            "value": "NA"
        },
        {
            "name": "${{ID}}$Rule.Filter",
            "type": "string",
            "value": "[]"
        },
        {
            "name": "${{ID}}$Rule.Threshold",
            "type": "string",
            "value": "{}"
        },
        {
            "name": "${{ID}}$App.ComponentName",
            "type": "string",
            "value": "NA"
        }
    ],
    "connections": {},
    "contrib": []
}