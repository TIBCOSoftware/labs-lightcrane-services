{
    "imports": [
        "github.com/SteveNY-Tibco/labs-air-contrib/activity/log",
        "github.com/SteveNY-Tibco/labs-air-contrib/function/air",
        "github.com/project-flogo/flow",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/project-flogo/contrib/function/corece",
        "github.com/project-flogo/contrib/function/string",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/datetime",
        "github.com/magallardo/fc/activity/sqlinsert"
    ],
    "resources": [
        {
            "id": "flow:DataStore",
            "data": {
                "name": "DataStore",
                "description": "3|7",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "LogMessageNumber",
                        "type": "expression",
                        "label": "LogMessageto",
                        "value": "air.isnumber($flow.reading.valueType)"
                    },
                    {
                        "id": 2,
                        "from": "LogMessageNumber",
                        "to": "InsertReadingNumeric",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "InsertReadingNumeric",
                        "to": "Next_Flow_3",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Next_Flow_3",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogMessage",
                        "to": "LogMessageString",
                        "type": "exprOtherwise",
                        "label": "LogMessage to LogMessageString"
                    },
                    {
                        "id": 6,
                        "from": "LogMessageString",
                        "to": "InsertReadingString",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "InsertReadingString",
                        "to": "Next_Flow_7",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "Next_Flow_7",
                        "to": "Return1",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"${{ID}}$Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "Saving Reading"
                            }
                        }
                    },
                    {
                        "id": "LogMessageNumber",
                        "name": "LogMessageNumber",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "Saving Reading Number"
                            }
                        }
                    },
                    
					{
						"id": "InsertReadingNumeric",
						"name": "InsertReadingNumeric",
						"description": "This activity executes insert on a PostgreSQL database",
						"activity": {
							"ref": "#sqlinsert",
							"settings": {
								"statement": "INSERT INTO readings_numeric(id, created, gatewayid, deviceid, resourceid, value) VALUES($1, $2, $3, $4, $5, $6)",
								"maxOpenConnections": 10,
								"maxIdleConnections": 2,
								"driverName": "postgres",
								"dbType": "postgres",
								"disablePrepared": true,
								"dataSourceName": "=string.concat(\"host=\",$property[\"PostgreSQL.${{ID}}$IoTPostgres.Host\"],\" port=\", $property[\"PostgreSQL.${{ID}}$IoTPostgres.Port\"],\" user=\", $property[\"PostgreSQL.${{ID}}$IoTPostgres.User\"], \" password=\", $property[\"PostgreSQL.${{ID}}$IoTPostgres.Password\"], \" dbname=\", $property[\"PostgreSQL.${{ID}}$IoTPostgres.Database_Name\"], \"sslmode=disable\")"
							},
							"input": {
								"params": {
									"1":"=$flow.reading.id",
									"2": "=datetime.formatDatetime(coerce.toString($flow.reading.origin), \"YYYY-MM-DD HH:mm:ss\")",
									"3": "=$flow.gateway",
									"4": "=$flow.reading.device",
									"5": "=$flow.reading.name",
									"6": "=corece.toFloat64($flow.reading.value)"
								}
							}
						}
					},                    
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    },
                    {
                        "id": "LogMessageString",
                        "name": "LogMessageString",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "=$property[\"${{ID}}$Logging.LogLevel\"]",
                                "flowInfo": false,
                                "message": "Saving Reading String"
                            }
                        }
                    },
                    
                    
					{
						"id": "InsertReadingString",
						"name": "InsertReadingString",
						"description": "This activity executes insert on a PostgreSQL database",
						"activity": {
							"ref": "#sqlinsert",
							"settings": {
								"statement": "INSERT INTO readings_numeric(id, created, gatewayid, deviceid, resourceid, value) VALUES($1, $2, $3, $4, $5, $6)",
								"maxOpenConnections": 10,
								"maxIdleConnections": 2,
								"driverName": "postgres",
								"dbType": "postgres",
								"disablePrepared": true,
								"dataSourceName": "=string.concat(\"host=\",$property[\"PostgreSQL.${{ID}}$IoTPostgres.Host\"],\" port=\", $property[\"PostgreSQL.${{ID}}$IoTPostgres.Port\"],\" user=\", $property[\"PostgreSQL.${{ID}}$IoTPostgres.User\"], \" password=\", $property[\"PostgreSQL.${{ID}}$IoTPostgres.Password\"], \" dbname=\", $property[\"PostgreSQL.${{ID}}$IoTPostgres.Database_Name\"], \"sslmode=disable\")"
							},
							"input": {
								"params": {
									"1":"=$flow.reading.id",
									"2": "=datetime.formatDatetime(coerce.toString($flow.reading.origin), \"YYYY-MM-DD HH:mm:ss\")",
									"3": "=$flow.gateway",
									"4": "=$flow.reading.device",
									"5": "=$flow.reading.name",
									"6": "=$flow.reading.value"
								}
							}
						}
					},                    
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn"
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "gateway",
                            "type": "string"
                        },
                        {
                            "name": "reading",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "enriched",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}"
                            }
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"gateway\":{\"type\":\"string\"},\"reading\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"origin\":{\"type\":\"number\"},\"device\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"valueType\":{\"type\":\"string\"},\"mediaType\":{\"type\":\"string\"}}},\"enriched\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"producer\":{\"type\":\"string\"},\"consumer\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"value\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}}}}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "PostgreSQL.${{ID}}$IoTPostgres.Host",
            "type": "string",
            "value": "database-iot.cuop7paojpqq.us-east-1.rds.amazonaws.com"
        },
        {
            "name": "PostgreSQL.${{ID}}$IoTPostgres.Port",
            "type": "float64",
            "value": 5432
        },
        {
            "name": "PostgreSQL.${{ID}}$IoTPostgres.Database_Name",
            "type": "string",
            "value": "postgres"
        },
        {
            "name": "PostgreSQL.${{ID}}$IoTPostgres.User",
            "type": "string",
            "value": "postgres"
        },
        {
            "name": "PostgreSQL.${{ID}}$IoTPostgres.Password",
            "type": "string",
            "value": "SECRET:a9et7e5Vc+QIFRahmWtkEGxurCXlEYyaIZg="
        },
        {
            "name": "${{ID}}$Logging.LogLevel",
            "type": "string",
            "value": "DEBUG"
        }
    ],
    "contrib": []
}